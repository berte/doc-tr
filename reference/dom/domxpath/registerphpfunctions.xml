<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4f5e2b22575131fa5e9c3004b1c874e1acb06573 Maintainer: nilgun Status: ready -->
<refentry xml:id="domxpath.registerphpfunctions" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DOMXPath::registerPhpFunctions</refname>
  <refpurpose>PHP işlevlerini XPath ifadelerinde kullanılabilir yapar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMXPath">
   <modifier>public</modifier> <type>void</type><methodname>DOMXPath::registerPhpFunctions</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>array</type><type>null</type></type><parameter>sınırla</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Bu yöntem PHP işlevlerinin XPath ifadelerinde kullanılabilme yeteneğini
   etkinleştirir.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sınırla</parameter></term>
     <listitem>
      <para>
       XPath ifadelerinde kullanmak üzere sadece belli işlevlere izin vermek için kullanılır.
      </para>
      <para>
       Ya bir dizge (işlev ismi) ya da işlev isimlerini içeren bir dizi
       olabilir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Bu örneklerde aşağıda içeriği verlen <filename>book.xml</filename>
   dosyası kullanılmıştır:
  </para>
  <para>
   <example>
    <title>book.xml</title>
    <programlisting role="xml">
<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<books>
 <book>
  <title>PHP Basics</title>
  <author>Jim Smith</author>
  <author>Jane Smith</author>
 </book>
 <book>
  <title>PHP Secrets</title>
  <author>Jenny Smythe</author>
 </book>
 <book>
  <title>XML basics</title>
  <author>Joe Black</author>
 </book>
</books>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <methodname>DOMXPath::registerPHPFunctions</methodname> ve <literal>php:functionString</literal> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = new DOMDocument;
$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// php: isim alanını tanıt (gerekli)
$xpath->registerNamespace("php", "http://php.net/xpath");

// PHP işlevlerini tanıt (sınırlama yok)
$xpath->registerPHPFunctions();

// substr işlevini book/title üzerinde kullan
$nodes = $xpath->query('//book[php:functionString("substr", title, 0, 3) = "PHP"]');

echo "'PHP' ile başlayan {$nodes->length} kitap bulundu:\n";
foreach ($nodes as $node) {
    $title  = $node->getElementsByTagName("title")->item(0)->nodeValue;
    $author = $node->getElementsByTagName("author")->item(0)->nodeValue;
    echo "$author tarafından yazılan '$title'\n";
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
'PHP' ile başlayan 2 kitap bulundu:
Jim Smith tarafından yazılan 'PHP Basics'
Jenny Smythe tarafından yazılan 'PHP Secrets'
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- <methodname>DOMXPath::registerPHPFunctions</methodname> ve <literal>php:function</literal> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = new DOMDocument;
$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// php: isim alanını tanıt (gerekli)
$xpath->registerNamespace("php", "http://php.net/xpath");

// PHP işlevlerini tanıt (sadece birden_fazla işlevi)
$xpath->registerPHPFunctions("birden_fazla");

function birden_fazla($nodes) {
    // Bir yazardan fazla varsa true dönsün
    return count($nodes) > 1;
}
// Birden fazla yazarlı kitapları ayır
$books = $xpath->query('//book[php:function("birden_fazla", author)]');

echo "Birden fazla yazarlı kitaplar:\n";
foreach ($books as $book) {
    echo $book->getElementsByTagName("title")->item(0)->nodeValue . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Birden fazla yazarlı kitaplar:
PHP Basics
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMXPath::registerNamespace</methodname></member>
    <member><methodname>DOMXPath::query</methodname></member>
    <member><methodname>DOMXPath::evaluate</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
