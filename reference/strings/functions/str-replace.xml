<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.str-replace">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>Bir alt dizgenin bütün örneklerini yenisiyle değiştirir
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>str_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>eski</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>yeni</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>konu</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">sayı</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>konu</parameter> dizgesi içindeki <parameter>eski</parameter>
   dizgelerinin her birini <parameter>yeni</parameter> dizgesiyle değiştirerek
   elde edilen dizi veya dizgeyi döndürür.
  </para>
  <para>
   Kaprisli yer değiştirme kurallarına ihtiyacınız olmayacaksa (düzenli
   ifadeler gibi) <function>preg_replace</function> yerine daima bu işlevi
   kullanın.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Eğer <parameter>eski</parameter> ve <parameter>yeni</parameter> birer dizi
   ise <function>str_replace</function> her diziden birer değer alıp bunları
   kullanarak  <parameter>konu</parameter> dizgesinde arama ve yer değiştirme
   yapar. Eğer <parameter>yeni</parameter> dizisi <parameter>eski</parameter>
   dizisinden daha az değere sahipse eksik kalan yeni dizgelerin yerine boş
   dizgeler konur. Eğer <parameter>eski</parameter> bir dizi ve
   <parameter>yeni</parameter> bir dizge ise her eski dizgesinin yerine bu yeni
   dizgesi konur. Zıddı anlamlı değildir.
  </para>
  <para>
   Eğer <parameter>eski</parameter> veya <parameter>yeni</parameter> bir dizi
   ise elemanları baştan sona doğru ele alınır.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>eski</parameter></term>
     <listitem>
      <para>
       Aranacak değer; çok sayıda değer belirtmek için dizi kullanılabilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yeni</parameter></term>
     <listitem>
      <para>
       Yeni değer; çok sayıda değer belirtmek için dizi kullanılabilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>konu</parameter></term>
     <listitem>
      <para>
       Bir dizge veya dizi belirtilebilir.
      </para>
      <para>
       Eğer <parameter>konu</parameter> bir dizi ise, arama ve değiştirme her
       eleman için ayrı ayrı yapılır ve dönen değer de bir dizi olur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sayı</parameter></term>
     <listitem>
       <para>
        Eğer belirtilirse, değiştirilen dizgelerin sayısı bu bağımsız değişkende
        döndürülür.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Yer değiştirmeler yapılmış dizge veya diziyi döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Basit <function>str_replace</function> örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php
// Sonuç: <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");

// Sonuç: Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");

// Sonuç: You should eat pizza, beer, and ice cream every day
$phrase  = "You should eat fruits, vegetables, and fiber every day.";
$healthy = array("fruits", "vegetables", "fiber");
$yummy   = array("pizza", "beer", "ice cream");

$newphrase = str_replace($healthy, $yummy, $phrase);

// sağlanan: 2
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>str_replace</function> olası sorunsal örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php

// Yer değiştirme sırası
$str     = "Line 1\nLine 2\rLine 3\r\nLine 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';

// \r\n'ler önce değiştirilmeli ki tekrar değiştirilmesin
$newstr = str_replace($order, $replace, $str);

// F çıktılanır, çünkü A ile B, B ile C, ... yer değiştirir.
// Yer değiştirme soldan sağa doğru yapıldığından
// son olarak E ile F yer değiştirir.
$search  = array('A', 'B', 'C', 'D', 'E');
$replace = array('B', 'C', 'D', 'E', 'F');
$subject = 'A';
echo str_replace($search, $replace, $subject);

// Çıktısı: apearpearle pear
// yukarda bahsedilen sebeple
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>Değiştirme sırası sorunsalı</title>
   <para>
    <function>str_replace</function> yer değiştirmeyi soldan sağa doğru
    yaptığından, örneklerde de göreceğiniz gibi, çok sayıda yer değiştirme
    yapıldığında bir önceki değer tekrar değiştirilir.
   </para>
  </caution>
  <note>
   <para>
    Bu işlev harf büyüklüğüne duyarlıdır. Harf büyüklüğüne duyarsız işlem
    yapmak istiyorsanız <function>str_ireplace</function> işlevini kullanınız.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
