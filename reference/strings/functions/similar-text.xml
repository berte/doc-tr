<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.similar-text">
 <refnamediv>
  <refname>similar_text</refname>
  <refpurpose>İki dizge arasındaki benzerliği hesaplar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>similar_text</methodname>
   <methodparam><type>string</type><parameter>dizge1</parameter></methodparam>
   <methodparam><type>string</type><parameter>dizge2</parameter></methodparam>
   <methodparam choice="opt"><type>float</type><parameter role="reference">yüzde</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   &book.programming.classics; kitabında açıkladığı şekilde iki dizge arasındaki
   benzerliği hesaplar. Ancak bu gerçeklenim Oliver'in kod örneğindeki gibi bir
   yığıt kullanmaz. Ayrıca bu algoritmanın hesaplama karmaşıklığı, N en uzun
   dizgenin  uzunluğu olmak üzere O(N**3)'tür.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge1</parameter></term>
     <listitem>
      <para>
       İlk dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dizge2</parameter></term>
     <listitem>
      <para>
       İkinci dizge.
      </para>
      <note>
       <para>
        <parameter>dizge1</parameter> ve
        <parameter>dizge2</parameter> yer değiştirise farklı sonuçlar ortaya
        çıkabilir; aşağıdaki örnek fikir verebilir.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yüzde</parameter></term>
     <listitem>
      <para>
       Benzerlik oranını belirtmek için kullanılır. Bir gönderimi üçüncü
       bağımsız değişkende aktararak, <function>similar_text</function> işlevinin
       sonucu verilen dizgelerin uzunluklarının ortalamasının 100 katına
       bölünerek benzerlik yüzde olarak hesaplanır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Her iki dizgede eşleşen karakterlerin sayısı döner.
  </para>
  <para>
   Eşleşen karakterlerin sayısı, en uzun ilk ortak alt dizgeyi bularak ve bunu
   önekler ve son ekler için ard arda bularak hesaplanır. Bulunan tüm ortak alt
   dizelerin uzunlukları toplanır.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="similar_text.example.swapping">
   <title>- <function>similar_text</function> bağımsız değişken takaslama örneği</title>
   <para>
    <parameter>dizge1</parameter> ve <parameter>dizge2</parameter>
    takaslandığında farklı sonuçlar elde edileceğini gösteren örnek.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$sim = similar_text('bafoobar', 'barfoo', $perc);
echo "similarity: $sim ($perc %)\n";
$sim = similar_text('barfoo', 'bafoobar', $perc);
echo "similarity: $sim ($perc %)\n";
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
similarity: 5 (71.428571428571 %)
similarity: 3 (42.857142857143 %)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>levenshtein</function></member>
    <member><function>soundex</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
