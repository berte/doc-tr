<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d0532e45fb2b6766c7fc73c7ccfc30a9720f8888 Maintainer: nilgun Status: ready -->
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="function.getimagesize">
 <refnamediv>
  <refname>getimagesize</refname>
  <refpurpose>Bir görüntünün boyutlarını döndürür</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>getimagesize</methodname>
   <methodparam><type>string</type><parameter>dosyaismi</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">ekbilgi</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>getimagesize</function> işlevi dosya ismiyle belirtilen
   desteklenen görüntünün boyutlarını saptar ve görüntünün boyutlarından başka
   görüntü dosyası biçemini, <acronym>HTML</acronym> <tag>IMG</tag> etiketinin
   öznitelikleri olarak yükseklik ve genişliği ve görüntüye ilişkin
   <acronym>HTTP</acronym> içerik türünü bir dizi içinde döndürür.
  </para>
  <para>
   <function>getimagesize</function> işlevi ayrıca,
   <parameter>ekbilgi</parameter> değiştirgesinde bazı ek bilgiler
   döndürebilir.
  </para>
  <caution>
   <para>
    Bu işlev belirtilen <parameter>dosyaismi</parameter>nin geçerli bir
    görüntü dosyası olacağını varsayar. Bir görüntü dosyası belirtilmemişse
    bile, hatalı olarak bunu bir görüntü dosyası olarak algılar ve işlev
    başarıyla döner, fakat dizi anlamsız değerler içerebilir.
   </para>
   <para>
    <function>getimagesize</function> işlevi belirtilen dosyanın geçerli bir
    dosya olup olmadığını sınamak için kullanılmamalı,
    <link linkend="book.fileinfo">Fileinfo</link> eklentisi gibi amaca yönelik
    bir çözüm kullanılmalıdır.
   </para>
  </caution>
  <note>
   <simpara>
    JPC ve JP2 farklı bit derinliğinde bileşenler içerebilirler. Bu durumda,
    "bits" değeri saptanan en büyük bit derinliğidir. Ayrıca JP2 dosyaları çok
    sayıda JPEG 2000 kod akımı içerebilir. Bu durumda,
    <function>getimagesize</function> işlevi, dosyanın başlığında saptadığı
    ilk kod akımının değerleriyle döner.
   </simpara>
  </note>
  <note>
   <simpara>
    Simge (icon) görüntüleri hakkında bilgi en yüksek bit derinliğine sahip
    simgeden elde edilir.
   </simpara>
  </note>
  <note>
   <simpara>
    GIF görüntüleri her çerçevenin görüntünün yalnızca bir bölümünü içerdiği çok
    sayıda çerçeveden oluşabilir. <function>getimagesize</function> tarafından
    bildirilen görüntünün boyutu toplam boyuttur (mantıksal ekran tanıtıcısından
    okunur).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dosyaismi</parameter></term>
     <listitem>
      <para>
       Hakkında bilgi döndürülecek görüntüyü içeren dosyanın yolu. Burada bir
       yerel dosya belirtilebileceği gibi (yapılandırma izin veriyorsa)
       <link linkend="wrappers">desteklenen akımlardan</link> biri
       kullanılarak uzak bir dosya da belirtilebilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ekbilgi</parameter></term>
     <listitem>
      <para>
       İsteğe bağlı bu değiştirge ile görüntü dosyası hakkında bazı ek bilgiler
       edinilebilir. Şimdilik, bir ilişkisel dizi olarak farklı
       <acronym>JPG</acronym> APP imleyicileri döndürülmektedir. Bazı
       programlar bu APP imleyicilerini görüntüye metin bilgisini gömmek için
       kullanırlar. En çok uygulananı APP13 imleyicisindeki <link
       xlink:href="&url.iptc;">IPTC</link> bilgisini gömmektir. İkil APP13
       imleyicisini okunabilir hale dönüştürebilmek için
       <function>iptcparse</function> işlevini kullanabilirsiniz.
      </para>
      <note>
       <para>
        <parameter>ekbilgi</parameter> sadece <acronym>JFIF</acronym>
        dosyalarını destekler.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   En fazla 7 elemanlı bir dizi ile döner. Bazı görüntü türleri
   <literal>channels</literal> ve <literal>bits</literal> elemanlarını
   içermeyebilir.
  </para>
  <para>
   0 ve 1 indisleri sırayla görüntünün genişliğini ve yüksekliğini içerir.
  </para>
  <note>
   <para>
    Bazı biçemler hiç görüntü içermeyeceği gibi bazıları da birden fazla görüntü
    içerebilir. Bu gibi durumlarda, <function>getimagesize</function> görüntü
    boyutlarını doğru olarak saptayamayabilir ve bu durumda boyutları 0 olarak
    döndürür.
   </para>
  </note>
  <para>
   2 indisinde görüntünün türünü belirtmek üzere <link
   linkend="image.constants">IMAGETYPE_XXX sabitlerinden</link> biri bulunur.
  </para>
  <para>
   3 indisinde doğrudan IMG etiketinin öznitelikleri olarak kullanılabilecek
   şekilde, <literal>height="yyy" width="xxx"</literal> dizgesi bulunur.
  </para>
  <para>
   <literal>mime</literal> indisinde görüntünün MIME türü bulunur. Bu dizge HTTP
   <literal>Content-type</literal> başlığında kullanılır:
   <example>
    <title>- <function>getimagesize</function> ve MIME türleri</title>
    <programlisting role="php">
<![CDATA[
<?php
$boyutlar = getimagesize($filename);
$dt = fopen($filename, "rb");
if ($boyutlar && $dt) {
    header("Content-type: {$boyutlar['mime']}");
    fpassthru($dt);
    exit;
} else {
    // hata
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <literal>channels</literal> indisinde RGB görüntüler için 3,
   CMYK görüntüler için 4 değeri bulunur.
  </para>
  <para>
   <literal>bits</literal> indisinde renk bit sayısı bulunur.
  </para>
  <para>
   Bazı görüntü türleri için  <literal>channels</literal> ve
   <literal>bits</literal> değerlerinin varlığı biraz kafa karıştırıcıdır.
   Örneğin, <acronym>GIF</acronym> daima piksel başına 3 kanal kullanır fakat
   genel bir renk tablosuna sahip canlandırmalı bir <acronym>GIF</acronym>
   için piksel başına bit sayısı hesaplanamaz.
  </para>
  <para>
   Başarısızlık halinde &false; döner.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <parameter>dosyaismi</parameter> görüntüsüne erişmek imkansızsa
   <function>getimagesize</function> <constant>E_WARNING</constant>
   seviyesinde bir hata üretir. Okuma hatasında ise
   <constant>E_NOTICE</constant> seviyesinde bir hata üretir.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Artık görüntünün boyutları, bitleri ve AVIF görüntü kanalları
        dönüyor; evvelce boyutlar için <literal>0x0</literal> döndürülür,
        bitler ve kanallarla ilgili bir dönüş olmazdı.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        WebP desteği eklendi
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>getimagesize</function> dosya örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
list($width, $height, $type, $attr) = getimagesize("img/flag.jpg");
echo "<img src=\"img/flag.jpg\" $attr alt=\"getimagesize() örneği\" />";
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- getimagesize (URL)</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("http://www.example.com/gifs/logo.gif");

// Dosya ismi boşluk karakteri içeriyorsa düzgün şekilde kodlamak gerekir
$size = getimagesize("http://www.example.com/gifs/lo%20go.gif");

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- IPTC döndüren getimagesize() örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("testimg.jpg", $info);
if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.notrequired;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>image_type_to_mime_type</function></member>
   <member><function>exif_imagetype</function></member>
   <member><function>exif_read_data</function></member>
   <member><function>exif_thumbnail</function></member>
   <member><function>imagesx</function></member>
   <member><function>imagesy</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

