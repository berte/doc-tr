<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.imagecolorallocatealpha" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolorallocatealpha</refname>
  <refpurpose>Bir görüntü için alfa kanallı bir renk ayırır</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>imagecolorallocatealpha</methodname>
   <methodparam><type>GdImage</type><parameter>görüntü</parameter></methodparam>
   <methodparam><type>int</type><parameter>kırmızı</parameter></methodparam>
   <methodparam><type>int</type><parameter>yeşil</parameter></methodparam>
   <methodparam><type>int</type><parameter>mavi</parameter></methodparam>
   <methodparam><type>int</type><parameter>alfa</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecolorallocatealpha</function> işlevi
   <parameter>alfa</parameter> bağımsız değişkeni ile ek olarak şeffaflık
   belirtilebilmesi dışında <function>imagecolorallocate</function> işlevine
   eşdeğerdir.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>kırmızı</parameter></term>
     <listitem>
      <para>&gd.value.red;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yeşil</parameter></term>
     <listitem>
      <para>&gd.value.green;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mavi</parameter></term>
     <listitem>
      <para>&gd.value.blue;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>alfa</parameter></term>
     <listitem>
      <para>
        0-127 arasında belirtilebilir. <literal>0</literal> tamamen mat,
        <literal>127</literal> ise tamamen şeffaf demektir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <parameter>kırmızı</parameter>, <parameter>yeşil</parameter> ve
   <parameter>mavi</parameter> değerleri onluk tabanda 0-255 aralığında,
   onaltılık tabanda 0x00-0xFF aralığında belirtilebilir.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renk ayrılamazsa &false;, aksi takdirde rengin indisini döndürür.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>imagecolorallocatealpha</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = 300;
$image=imagecreatetruecolor($size, $size);

// Siyah kenar çizgili beyaz artalan
$back = imagecolorallocate($image, 255, 255, 255);
$border = imagecolorallocate($image, 0, 0, 0);
imagefilledrectangle($image, 0, 0, $size - 1, $size - 1, $back);
imagerectangle($image, 0, 0, $size - 1, $size - 1, $border);

$yellow_x = 100;
$yellow_y = 75;
$red_x    = 120;
$red_y    = 165;
$blue_x   = 187;
$blue_y   = 125;
$radius   = 150;

// Renkleri alfa değerleriyle ayıralım
$yellow = imagecolorallocatealpha($image, 255, 255, 0, 75);
$red    = imagecolorallocatealpha($image, 255, 0, 0, 75);
$blue   = imagecolorallocatealpha($image, 0, 0, 255, 75);

// Üst üste üç elips çizelim
imagefilledellipse($image, $yellow_x, $yellow_y, $radius, $radius, $yellow);
imagefilledellipse($image, $red_x, $red_y, $radius, $radius, $red);
imagefilledellipse($image, $blue_x, $blue_y, $radius, $radius, $blue);

// Başlığı çıktılamayı unutmuyoruz!
header('Content-Type: image/png');

// ve sonucu çıktılıyoruz
imagepng($image);
imagedestroy($image);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Örnek çıktısı: imagecolorallocatealpha() kullanım örneği</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagecolorallocatealpha.png"/>
     </imageobject>
    </mediaobject>
   </example>
   <example xml:id="imagecolorallocatealpha.example.convert">
    <title>- <function>imagecolorallocatealpha</function> ile kullanmak için
     alfa değerlerini dönüştürmek</title>
    <para>
     Genelde <literal>0</literal>'lık alfa değerleri tamamen şeffaf pikselleri
     belirtir ve alfa kanalının 8 biti vardır. Bu tür alfa değerlerini
     <function>imagecolorallocatealpha</function> ile uyumlu olacak şekilde
     dönüştürmek için basit aritmetik yeterlidir:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$alpha8 = 0; // tamamen şeffaf
var_dump(127 - ($alpha8 >> 1));
$alpha8 = 255; // tamamen mat
var_dump(127 - ($alpha8 >> 1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(127)
int(0)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecolorallocate</function></member>
   <member><function>imagecolordeallocate</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
