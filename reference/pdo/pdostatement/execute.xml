<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 082ddc19f53e6e254010de1a1fbbe485ff744ec1 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdostatement.execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::execute</refname>
  <refpurpose>Bir hazır deyimi çalıştırır</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
<methodsynopsis role="PDOStatement">
   <modifier>public</modifier>
   <type>bool</type><methodname>PDOStatement::execute</methodname>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>girdiler</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Bir <link linkend="pdo.prepared-statements">hazır deyimi</link> çalıştırır.
   Hazır deyim bağımsız değişken içeriyorsa şu ikisinden birini yapmalısınız:
   <itemizedlist>
    <listitem>
     <simpara>
      Bağımsız değişkenleri ve/veya değerleri soru imleri ile ilişkilendirmek için
      (sırasıyla)  <methodname>PDOStatement::bindParam</methodname> ve/veya
      <methodname>PDOStatement::bindValue</methodname> yöntemi kullanılmalıdır.
      İlişkili değişkenler, değerlerini girdi olarak iletir ve varsa çıktı
      değerlerini
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      ya da aktarılan salt-girdi bağımsız değişken değerlerini bir dizi olarak alır.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>girdiler</parameter></term>
     <listitem>
      <para>
       Çalıştırılacak SQL deyimiyle ilişkilendirilmiş bağımsız değişken sayısı kadar
       değer içeren bir dizi. Tüm değerler <constant>PDO::PARAM_STR</constant>
       olarak ele alınır.
      </para>
      <para>
       Tek bir bağımsız değişkene birden fazla değer belirtilemez. Örneğin bir
       IN() yan tümcesindeki tek bir isimli bağımsız değişken iki değerle
       ilişkilendirilemez.
      </para>
      <para>
       Belirtilenden daha fazla değeri ilişkilendirmek mümkün değildir;
       <parameter>girdiler</parameter> içinde
       <methodname>PDO::prepare</methodname> yönteminde belirtilen
       deyimdekinden daha fazla anahtar mevcutsa, deyim başarısız olur ve
       bir hata çıktılanır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>- İlişkili değişken ve değerlerle bir hazır deyimin çalıştırılması</title>
   <programlisting role="php">
<![CDATA[
<?php
/* PHP değişken ve değerleriyle ilişkilendirilmiş bir hazır deyimi çalıştıralım */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour LIKE :colour');
$sth->bindParam('calories', $calories, PDO::PARAM_INT);
/* isimler ":" ile öncelenebiliyor (seçimlik) */
$sth->bindParam(':colour', "%{$colour}%");
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>- İsimli değerler dizisi ile hazır bir deyimin çalıştırılması</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Yerleştirilecek değerleri bir dizi olarak aktarmak suretiyle
   bir hazır deyimi çalıştıralım */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->execute(array('calories' => $calories, 'colour' => $colour));
/* Dizi anahtarları da ":" ile öncelenebiliyor (seçimlik) */
$sth->execute(array(':calories' => $calories, ':colour' => $colour));
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>- - Konumlu değerler dizisi ile bir hazır deyimin çalıştırılması
   </title>
   <programlisting role="php">
<![CDATA[
<?php
/* Yerleştirilecek değerleri bir dizi olarak aktarmak suretiyle
   bir hazır deyimi çalıştıralım */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->execute(array($calories, $colour));
?>
]]>
   </programlisting>
  </example>


  <example><title>Soru imli bir hazır deyimin çalıştırılması</title>
   <programlisting role="php">
<![CDATA[
<?php
/* PHP değişkenleriyle ilişkilendirilmiş bir hazır deyimi çalıştıralım */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $colour, PDO::PARAM_STR, 12);
$sth->execute();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>- IN yan tümcesi için dizi kullanarak bir hazır deyimin
    çalıştırılması</title>
   <programlisting role="php">
<![CDATA[
<?php
/* IN yan tümcesi için dizi kullanarak hazır deyimi çalıştır */
$params = array(1, 21, 63, 171);
/* Bağımsız değişken sayısı kadar yer tutucu içeren bir dizge oluştur */
$place_holders = implode(',', array_fill(0, count($params), '?'));

/*
    Bu, $params dizimizdeki her değer için yeterli adsız yer tutucuyla
    ifadeyi hazırlar. $params dizisinin değerleri, deyim yürütüldüğünde
    hazırlanan deyimdeki yer tutucularla ilişkilendirilir. Bu, değişkene
    bir başvuru gerektirdiğinden, PDOStatement::bindParam() kullanımıyla
    aynı değildir. PDOStatement::execute() ise yalnızca değere göre
    ilişkilendirme yapar.
*/
$sth = $dbh->prepare("SELECT id, name FROM contacts WHERE id IN ($place_holders)");
$sth->execute($params);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Bazı sürücüler sonraki deyimi çalıştırmadan önce <link
    linkend="pdostatement.closecursor">göstericiyi kapatmayı</link> gerektirir.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::bindParam</methodname></member>
    <member><methodname>PDOStatement::fetch</methodname></member>
    <member><methodname>PDOStatement::fetchAll</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
