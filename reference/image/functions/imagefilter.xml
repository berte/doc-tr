<?xml version='1.0' encoding='utf-8'?>
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: haluk Status: ready -->
<refentry xml:id="function.imagefilter" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagefilter</refname>
  <refpurpose>Bir görüntüye bir süzgeç uygular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagefilter</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>süzgeç</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>int</type><type>float</type><type>bool</type></type><parameter>seçenekler</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagefilter</function> işlevi, türü <parameter>süzgeç</parameter>
   ile belirtilen süzgeci <parameter>görüntü</parameter>ye uygular.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>süzgeç</parameter></term>
     <listitem>
      <para>
       <parameter>süzgeç</parameter> şunlardan biri olabilir:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_NEGATE</constant>: Görüntüdeki tüm renkleri zıt
          renge dönüştürür.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GRAYSCALE</constant>: Görüntüyü gri tonlamalı hale
          getirir. REC.601 luma (Y') hesaplamasındaki katsayılar kullanılarak
          kırmızı, yeşil ve mavi bileşenlerin ağırlıklı ortalamalarından gri
          tonlama elde edilir.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant>: Görüntünün parlaklığını
          değiştirir. Parlaklık seviyesini belirtmek için
          <parameter>seçenekler[0]</parameter> bağımsız değişkenini kullanın.
          Parlaklık -255 ile 255 arasındadır.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant>: Görüntünün karşıtlık
          seviyesini değiştirir. Karşıtlık seviyesini belirtmek için
          <parameter>seçenekler[0]</parameter> bağımsız değişkenini kullanın.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: Rengi sizin belirtmeniz
          dışında <constant>IMG_FILTER_GRAYSCALE</constant> gibidir. Kırmızı,
          yeşil ve mavi renk seviyeleri belirtmek için sırayla
          <parameter>seçenekler[0]</parameter>,
          <parameter>seçenekler[1]</parameter> ve
          <parameter>seçenekler[2]</parameter> bağımsız değişkenlerini, alfa kanalı
          için de <parameter>seçenekler[3]</parameter> bağımsız değişkenini kullanın.
          Ana renklerin seviyesi 0 ile 255 arasında belirtilebilir.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EDGEDETECT</constant>: Görüntünün kenarlarını
          vurgulamak için kenar algılaması kullanılır.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EMBOSS</constant>: Görüntüye kabartma uygular.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GAUSSIAN_BLUR</constant>: Görüntüyü Gauss
          yöntemiyle bulanıklaştırır.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SELECTIVE_BLUR</constant>: Görüntüyü
          bulanıklaştırır.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_MEAN_REMOVAL</constant>: Karalama taslak etkisi
          oluşturmak için silme işlemi uygular.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant>: Görüntünün sert hatlarını
          yumuşatır. Yumuşatma seviyesini belirtmek için
          <parameter>seçenekler[0]</parameter> bağımsız değişkenini kullanın.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Görüntüye mozaik etkisi
          verir. Mozaik boyutu için <parameter>seçenekler[0]</parameter>
          mozaik etki kipini belirtmek için <parameter>seçenekler[1]</parameter>
          bağımsız değişkenini kullanın.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Görüntüye saçılma etkisi
          verir, etki gücünü tanımlamak için
          <parameter>seçenekler[0]</parameter> ve
          <parameter>seçenekler[1]</parameter>'i ve yalnızca seçili piksel
          renklerini uygulamak için <parameter>seçenekler[2]</parameter>'yi
          kullanın.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler[0]</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant>: Parlaklık seviyesi.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant>: Karşıtlık seviyesi.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.red;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant>: Yumuşatma seviyesi.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Piksel cinsinden mozaik boyu.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Etki eksiltme seviyesi.
          Bu, <parameter>seçenekler[1]</parameter> ile ayarlanan toplama
          seviyesinden daha yüksek veya ona eşit olmamalıdır.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler[1]</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.green;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Gelişkin mozaik etkisinin
          kullanılıp kullanılmayacağı (&false; öntanımlıdır).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Etki toplama seviyesi.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler[2]</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.blue;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Etkiyi uygulamak için isteğe
          bağlı dizi indisli renk değerleri.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler[3]</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: Alfa kanalı. 0-127
          arasında belirtilebilir. 0 tamamen mat, 127 ise tamamen şeffaf
          demektir.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &gd.changelog.image-param;
      <row>
       <entry>7.4.0</entry>
       <entry>
        Saçılma desteği (<constant>IMG_FILTER_SCATTER</constant>) eklendi.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>imagefilter</function> gri tonlama örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('dave.png');

if($im && imagefilter($im, IMG_FILTER_GRAYSCALE))
{
    echo 'Görüntüye gri tonlama uygulandı.';

    imagepng($im, 'dave.png');
}
else
{
    echo 'Görüntüye gri tonlama uygulanamadı.';
}

imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>imagefilter</function> parlaklık örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('sean.png');

if($im && imagefilter($im, IMG_FILTER_BRIGHTNESS, 20))
{
    echo 'Görüntünün parlaklığı değişti.';

    imagepng($im, 'sean.png');
    imagedestroy($im);
}
else
{
    echo 'Görüntünün parlaklığı değiştirilemedi.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>imagefilter</function> renklendirme örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('philip.png');

/* K, Y, M olarak 0, 255, 0 yeşildir */
if($im && imagefilter($im, IMG_FILTER_COLORIZE, 0, 255, 0))
{
    echo 'Görüntü yeşertildi.';

    imagepng($im, 'philip.png');
    imagedestroy($im);
}
else
{
    echo 'Görüntü yeşertilemedi.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>imagefilter</function> negatiflik örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// İşlevin taşınabilir olması için, yani imagefilter() kullanamadığımız
// durumlar için kendi negatiflik işlevimizi yazalım
function negate($im)
{
    if(function_exists('imagefilter'))
    {
        return imagefilter($im, IMG_FILTER_NEGATE);
    }

    for($x = 0; $x < imagesx($im); ++$x)
    {
        for($y = 0; $y < imagesy($im); ++$y)
        {
            $index = imagecolorat($im, $x, $y);
            $rgb = imagecolorsforindex($index);
            $color = imagecolorallocate($im, 255 - $rgb['red'],
                       255 - $rgb['green'], 255 - $rgb['blue']);

            imagesetpixel($im, $x, $y, $color);
        }
    }

    return(true);
}

$im = imagecreatefromjpeg('kalle.jpg');

if($im && negate($im))
{
    echo 'Görüntünün negatifi başarıyla elde edildi.';

    imagejpeg($im, 'kalle.jpg', 100);
    imagedestroy($im);
}
else
{
    echo 'Görüntünün negatifi elde edilemedi.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>imagefilter</function> mozaikleştirme örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// PHP logosunu yükleyelim, farkları göstermek için bize iki görüntü lazım
$logo1 = imagecreatefrompng('./php.png');
$logo2 = imagecreatefrompng('./php.png');

// Üzerinde farkları göstermek için bir tuval oluşturalım
$output = imagecreatetruecolor(imagesx($logo1) * 2, imagesy($logo1));

// Her örneğe 3 piksellik mozaikleştirme uygulayalım
imagefilter($logo1, IMG_FILTER_PIXELATE, 3);
imagefilter($logo2, IMG_FILTER_PIXELATE, 3, true);

// Farkları çıktı görüntüsünde karıştıralım
imagecopy($output, $logo1, 0, 0, 0, 0, imagesx($logo1) - 1,
                                       imagesy($logo1) - 1);
imagecopy($output, $logo2, imagesx($logo2), 0, 0, 0,
           imagesx($logo2) - 1, imagesy($logo2) - 1);
imagedestroy($logo1);
imagedestroy($logo2);

// Farkları çıktılayalım
header('Content-Type: image/png');
imagepng($output);
imagedestroy($output);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Örnek çıktısı: imagefilter() mozaikleştirme</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagefilterpixelate.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>imagefilter</function> saçılma örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// PHP logosunu yükleyelim
$logo = imagecreatefrompng('./php.png');

// Görüntüye çok yumuşak saçılma etkisi uygulayalım
imagefilter($logo, IMG_FILTER_SCATTER, 3, 5);

// Saçılma etkili görüntüyü çıktılayalım
header('Content-Type: image/png');
imagepng($logo);
imagedestroy($logo);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Örnek çıktısı: imagefilter() saçılma</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/scatter.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    <constant>IMG_FILTER_SCATTER</constant> sonucu daima rastgeledir.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imageconvolution</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
