<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ecd72af657b9168e492092b998b9777cabcb0c30 Maintainer: nilgun Status: ready -->
<refentry xml:id="reflectionparameter.getdefaultvalue" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionParameter::getDefaultValue</refname>
  <refpurpose>Bağımsız değişkenin öntanımlı değerini döndürür</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>ReflectionParameter::getDefaultValue</methodname>
   <void />
  </methodsynopsis>
  <para>
   Kullanıcı tanımlı veya dahili işlev veya yöntem bağımsız değişkeninin öntanımlı
   değerini döndürür. Bağımsız değişken seçimlik ise
   <classname>ReflectionException</classname> yavrulanır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bağımsız değişkenin öntanımlı değeri.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Bu yöntem artık yerleşik işlev ve sınıf yöntemlerinin
        bağımsız değişkenlerinin de öntanımlı değerlerini döndürüyor; evvelce bu
        durumda bir <classname>ReflectionException</classname> yavrulanırdı.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- İşlev bağımsız değişkenlerinin öntanımlı değerlerini döndürmek</title>
    <programlisting role="php">
<![CDATA[
<?php
function foo($test, $bar = 'baz')
{
    echo $test . $bar;
}

$function = new ReflectionFunction('foo');

foreach ($function->getParameters() as $param) {
    echo 'Bağımsız değişken Adı: ' . $param->getName() . PHP_EOL;
    if ($param->isOptional()) {
        echo 'Öntanımlı Değer: ' . $param->getDefaultValue() . PHP_EOL;
    }
    echo PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs;
   <screen>
<![CDATA[
Bağımsız değişken Adı: test

Bağımsız değişken Adı: bar
Öntanımlı Değer: baz
]]>
   </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>ReflectionParameter::isOptional</methodname></member>
   <member><methodname>ReflectionParameter::isDefaultValueAvailable</methodname></member>
   <member><methodname>ReflectionParameter::getDefaultValueConstantName</methodname></member>
   <member><methodname>ReflectionParameter::isPassedByReference</methodname></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
