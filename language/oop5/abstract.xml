<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9ee9eccf455188ab6eb352194eb6f9eb99e15606 Maintainer: nilgun Status: ready -->
<!-- CREDITS: tpug, sezer -->
 <sect1 xml:id="language.oop5.abstract" xmlns="http://docbook.org/ns/docbook">
  <title>Sınıf Soyutlama</title>

  <para>
    PHP soyut sınıf ve yöntemlerin kullanımını mümkün kılmıştır. Soyut
    olarak tanımlanmış bir sınıf örneklenemez ve en az bir soyut yöntem
    içeren bir sınıf da soyut olmalıdır. Soyut olarak tanımlanmış yöntemler o
    yöntemlerin imzasıdırlar, gerçeklemenin bütününü temsil edemezler.
  </para>

  <para>
    Soyut bir sınıftan kalıtsal özellikler devralınırken, ebeveyn sınıf
    bildiriminde soyut olarak bildirilmiş tüm yöntemlerin çocuk sınıf
    tarafından da tanımlanmasına ek olarak,
    <link linkend="language.oop5.inheritance">kalıtım</link> ve
    <link linkend="language.oop.lsp">bağımsız değişken yerlerinin uyumluluğu</link>
    kurallarına da uyması gerekir.
  </para>

  <example>
   <title>- Soyut sınıf örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
abstract class SoyutSınıf
{
    // Genişletilen sınıfı bu yöntemi tanımlamaya zorla
    abstract protected function değeriAl();
    abstract protected function önekDeğeri($önek);

    // Ortak yöntem
    public function yazdır() {
        print $this->değeriAl() . "\n";
    }
}

class SomutSınıf1 extends SoyutSınıf
{
    protected function değeriAl() {
        return "SomutSınıf1";
    }

    public function önekDeğeri($önek) {
        return "{$önek}SomutSınıf1";
    }
}

class SomutSınıf2 extends SoyutSınıf
{
    public function değeriAl() {
        return "SomutSınıf2";
    }

    public function önekDeğeri($önek) {
        return "{$önek}SomutSınıf2";
    }
}

$class1 = new SomutSınıf1;
$class1->yazdır();
echo $class1->önekDeğeri('FOO_') ."\n";

$class2 = new SomutSınıf2;
$class2->yazdır();
echo $class2->önekDeğeri('FOO_') ."\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
SomutSınıf1
FOO_SomutSınıf1
SomutSınıf2
FOO_SomutSınıf2
]]>
   </screen>
  </example>
  <example>
   <title>-Soyut sınıf örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
abstract class AbstractClass
{
    // Soyut sınıfımız sadece gerekli bağımsız değişkenleri tanımlamalı
    abstract protected function prefixName($name);

}

class ConcreteClass extends AbstractClass
{

    // Çocuk sınıfımız seçimlik bağımsız değişkenleri tanımlamalı
    // ebeveynin imzasındakileri değil
    public function prefixName($name, $separator = ".") {
        if ($name == "Pacman") {
            $prefix = "Mr";
        } elseif ($name == "Pacwoman") {
            $prefix = "Mrs";
        } else {
            $prefix = "";
        }
        return "{$prefix}{$separator} {$name}";
    }
}

$class = new ConcreteClass;
echo $class->prefixName("Pacman"), "\n";
echo $class->prefixName("Pacwoman"), "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Mr. Pacman
Mrs. Pacwoman
]]>
   </screen>
  </example>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
