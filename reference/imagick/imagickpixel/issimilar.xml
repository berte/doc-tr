<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fa0c88f1e36a3f28b4fcee0b2d1e188b54e0c44b Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagickpixel.issimilar">
 <refnamediv>
  <refname>ImagickPixel::isSimilar</refname>
  <refpurpose>İki renk arasındaki benzerliği hesaplar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>bool</type><methodname>ImagickPixel::isSimilar</methodname>
   <methodparam><type>ImagickPixel</type><parameter>renk</parameter></methodparam>
   <methodparam><type>float</type><parameter>benzerlik</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>renk</parameter> bağımsız değişkeni ile belirtilen ImagickPixel
   nesnesinin rengi ile bu nesnenin rengi arasındaki benzerliği hesaplar. Eğer
   iki nesne arasındaki benzerlik <parameter>benzerlik</parameter> ile
   belirtilen değerden küçükse iki renk benzerdir.
   Bu işlev eskidir. Yerine <link
   linkend="imagickpixel.ispixelsimilar">ImagickPixel::isPixelSimilar()</link>
   kullanılnalıdır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>renk</parameter></term>
     <listitem>
      <para>
       Bu nesne ile karşılaştırılacak ImagickPixel nesnesi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>benzerlik</parameter></term>
     <listitem>
      <para>&imagick.parameter.fuzz; Bu değerin kuramsal azamisi üçün
       kareköküne eşit bir değerdir (1.732).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    <example>
      <title>- <function>ImagickPixel::isSimilar</function> örneği</title>
      <programlisting role="php">
      <![CDATA[
<?php
        // Aşağıdaki denemeler 255 olarak ifade edilen azami mesafe ile
        // yapılmıştır, bu nedenle bunları bir birim küpün köşegen uzunluğu
        // olan üçün karekökü ile ölçeklendirmemiz gerekir.

        $root3 = 1.732050807568877;

        $tests = array(
            ['rgb(245, 0, 0)',      'rgb(255, 0, 0)',   9 / $root3,         false,],
            ['rgb(245, 0, 0)',      'rgb(255, 0, 0)',  10 / $root3,         true,],
            ['rgb(0, 0, 0)',        'rgb(7, 7, 0)',     9 / $root3,         false,],
            ['rgb(0, 0, 0)',        'rgb(7, 7, 0)',    10 / $root3,         true,],
            ['rgba(0, 0, 0, 1)',    'rgba(7, 7, 0, 1)', 9 / $root3,         false,],
            ['rgba(0, 0, 0, 1)',    'rgba(7, 7, 0, 1)',    10 / $root3,     true,],
            ['rgb(128, 128, 128)',  'rgb(128, 128, 120)',   7 / $root3,     false,],
            ['rgb(128, 128, 128)',  'rgb(128, 128, 120)',   8 / $root3,     true,],
            ['rgb(0, 0, 0)',        'rgb(255, 255, 255)',   254.9,          false,],
            ['rgb(0, 0, 0)',        'rgb(255, 255, 255)',   255,            true,],
            ['rgb(255, 0, 0)',      'rgb(0, 255, 255)',     254.9,          false,],
            ['rgb(255, 0, 0)',      'rgb(0, 255, 255)',     255,            true,],
            ['black',               'rgba(0, 0, 0)',        0.0,            true],
            ['black',               'rgba(10, 0, 0, 1.0)',  10.0 / $root3,  true],);

        $output = "<table width='100%' class='infoTable'><thead>
                <tr>
                <th>
                Color 1
                </th>
                <th>
                Color 2
                </th>
                <th>
                    Deneme mesafesi * 255
                </th>
                <th>
                    Mesafe dahilinde
                </th>
                </tr>
        </thead>";

        $output .= "<tbody>";

        foreach ($tests as $testInfo) {
            $color1 = $testInfo[0];
            $color2 = $testInfo[1];
            $distance = $testInfo[2];
            $expectation = $testInfo[3];
            $testDistance = ($distance / 255.0);

            $color1Pixel = new \ImagickPixel($color1);
            $color2Pixel = new \ImagickPixel($color2);

            $isSimilar = $color1Pixel->isPixelSimilar($color2Pixel, $testDistance);


            if ($isSimilar !== $expectation) {
                echo "Deneme mesafesi başarısız. [$color1] ile [$color2] renkleri mesafe içinde değil. $testDistance BAŞARISIZ.".NL;
            }

            $layout = "<tr>
                <td>%s</td>
                <td>%s</td>
                <td>%s</td>
                <td style='text-align: center;'>%s</td>
            </tr>";

            $output .= sprintf(
                $layout,
                $color1,
                $color2,
                $distance,
                $isSimilar ? 'evet' : 'hayır'
            );
        }

        $output .= "</tbody></table>";

        return $output;

?>
]]>
      </programlisting>
    </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
