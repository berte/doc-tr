<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5fabd07880ab15b0ad2cf7eb055c7c2b36d7120f Maintainer: nilgun Status: ready -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Paketlenmiş bir ikil dizgeden verileri ayrıştırır</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>biçem</parameter></methodparam>
   <methodparam><type>string</type><parameter>veri</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>başlangıç</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Paketlenmiş bir ikil dizgeden veriyi belirtilen
   <parameter>biçem</parameter> dizgesine göre ilişkisel bir diziye çıkarır.
  </para>
  <para>
   <function>unpack</function> çıkardığı veriyi bir ilişkisel dizide saklar.
   Bunu sağlamak için biçem kodları farklı isimlendirilir ve bir bölü çizgisi /
   ile ayrılırlar. Yineleyici bir değer belirtilirse dizi anahtarları, belirtilen
   ismin ardına eklenmiş sıra numaraları içerecektir.
  </para>
  <para>
   Perl uyumu için aşağıdaki değişiklikler uygulandı:
  </para>
  <para>
   "a" kodu artık sondaki NULL baytları tutuyor.
  </para>
  <para>
   "A" kodu artık tüm ASCII boşluklarını (boşluklar, sekmeler,
   satırsonları, satır başları ve NULL baytlar) ayırıyor.
  </para>
  <para>
   NULL ile doldurulmuş dizeler için "Z" kodu eklendi; sondaki NULL
   baytları kaldırıyor.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>biçem</parameter></term>
     <listitem>
      <para>
       Biçem kodlarının açıklamaları için <function>pack</function> işlevine
       bakınız.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>veri</parameter></term>
     <listitem>
      <para>
       Paketlenmiş veri.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>başlangıç</parameter></term>
     <listitem>
      <para>
       Verininin çıkarılmaya başlanacağı başlangıç yeri.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   İkil dizgeden ayrıştırılan verileri içeren bir ilişkisel
   dizi,&return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <type>float</type> ve <type>double</type> türlerin ikisininde değerli
        baytları başta ve sonda olabiliyor.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        Seçimlik <parameter>başlangıç</parameter> bağımsız değişkeni eklendi.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>unpack</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("cchars/nint", $binarydata);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [chars] => 4
    [int] => 160
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>unpack</function> ve bir yineleyici</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("c2chars/nint", $binarydata);
print_r($array);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array
(
    [chars1] => 4
    [chars2] => 0
    [int] => 40960
)
]]>
     </screen>
    </example>
   </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    PHP dahili olarak tamsayı değerleri işaretli olarak sakladığından, büyükçe
    bir işaretsiz uzun tamsayıyı ayrıştırmak isterseniz, PHP negatif sayıları
    da aynı boyutta sakladığından elde edilen değer, biçem dizgesinde
    işaretsiz olduğunu belirtseniz bile, negatif bir sayı olacaktır.
   </para>
  </caution>
  <caution>
   <para>
    Bir öğenin ismi yoksa <literal>1</literal>'den başlayan sayısal indisler
    kullanılır. Birden fazla isimsiz öğenin bulunmamasına dikkat etmek
    gerekir, yoksa <literal>1</literal>'den "yeniden" başlayan sayısal
    indisler eskilerini geçersiz kılar.
   </para>
   <para>
    <example>
     <title>- <function>unpack</function> ve isimsiz anahtarlar</title>
     <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x32\x42\x00\xa0";
$array = unpack("c2/n", $binarydata);
var_dump($array);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
array(2) {
  [1]=>
  int(160)
  [2]=>
  int(66)
}
]]>
     </screen>
     <para>
      <literal>c</literal> belirtecindeki ilk değer
      <literal>n</literal> belirtecindeki ilk değer tarafınan geçersiz
      kılınmaktadır.
     </para>
    </example>
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
