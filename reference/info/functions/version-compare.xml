<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4e6f0774f03131cbeeb8c21019a690bf97fd22b6 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.version-compare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>version_compare</refname>
  <refpurpose>PHP standardına uygun hale getirilmiş iki sürüm numarası
  dizgesini karşılaştırır</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>bool</type></type>
   <methodname>version_compare</methodname>
   <methodparam><type>string</type><parameter>sürüm1</parameter></methodparam>
   <methodparam><type>string</type><parameter>sürüm2</parameter></methodparam>
    <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>işleç</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>version_compare</function> işlevi PHP standardına uygun hale
   getirilmiş iki sürüm numarası dizgesini karşılaştırır.
  </para>
  <para>
   İşlev önce <literal>_</literal>, <literal>-</literal> ve
   <literal>+</literal> karakterlerini birer nokta <literal>.</literal> ile
   değiştirir, ardından numara olmayan dizgeciklerin önüne ve ardına birer
   nokta konur. Örneğin, '4.3.2RC1' dizgesi '4.3.2.RC.1' haline gelir. Sonra
   her bileşen soldan sağa karşılaştırılır. Bileşenlerin
   içerdiği özel sürüm dizgeleri şu sıralamaya göre ele alınırlar:
   <literal>bu listede olmayan bir dizge</literal> &lt;
   <literal>dev</literal> &lt; <literal>alpha</literal> =
   <literal>a</literal> &lt; <literal>beta</literal> =
   <literal>b</literal> &lt; <literal>RC</literal> =
   <literal>rc</literal> &lt; <literal>#</literal> &lt;
   <literal>pl</literal> = <literal>p</literal>. Bu yöntemle, '4.1' ve '4.1.2'
   gibi farklı seviyelerden sürümler karşılaştırabileceği gibi geliştirme
   sürümlerinin karşılaştırılması için de kullanılabilir.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sürüm1</parameter></term>
     <listitem>
      <para>
       İlk sürüm numarası.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sürüm2</parameter></term>
     <listitem>
      <para>
       İkinci sürüm numarası.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>işleç</parameter></term>
     <listitem>
      <para>
       Olası işleçler sırasıyla şunlardır:
       <literal>&lt;</literal>, <literal>lt</literal>,
       <literal>&lt;=</literal>, <literal>le</literal>,
       <literal>&gt;</literal>, <literal>gt</literal>,
       <literal>&gt;=</literal>, <literal>ge</literal>,
       <literal>==</literal>, <literal>=</literal>,
       <literal>eq</literal>,  <literal>!=</literal>,
       <literal>&lt;&gt;</literal>, <literal>ne</literal>.
      </para>
      <para>
       Bu bağımsız değişken harf büyüklüğüne duyarlıdır, yani değerlerin hepsi küçük
       harfli olmalıdır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Öntanımlı olarak, <function>version_compare</function> işlevi, birinci
   sürüm ikincisinden küçükse  <literal>-1</literal>, büyükse
   <literal>1</literal>, eşitse <literal>0</literal> döndürür.
  </para>
  <para>
   İsteğe bağlı <parameter>işleç</parameter> bağımsız değişkeni kullanılırsa ve
   sürümler arasında belirtilen ilişki varsa &true;, aksi takdirde &false;
   döner.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Aşağıdaki örnekte, kodu çalıştıran PHP sürümüne içermesi nedeniyle  <constant>PHP_VERSION</constant> sabiti kullanılmıştır.
  </para>
  <para>
   <example>
    <title>- <function>version_compare</function> örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php
if (version_compare(PHP_VERSION, '7.0.0') >= 1) {
    echo 'PHP sürümüm en azından 7.0.0, gerçek sürüm: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.3.0') >= 0) {
    echo 'PHP sürümüm en azından 5.3.0, gerçek sürüm: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.0.0', '>=')) {
    echo 'PHP sürümüm en azından 5.0.0, gerçek sürüm: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.0.0', '<')) {
    echo 'Hala PHP 4 kullanıyorum, gerçek sürüm: ' . PHP_VERSION . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <constant>PHP_VERSION</constant> sabiti kullanılan PHP'nin sürüm numarasını
    içerir.
   </para>
  </note>
  <note>
   <para>
    5.3.0-dev gibi ön dağıtım sürümleri için, ulaşacakları asıl
    sürümün numarasının alt sürümün numarası (PHP 5.3.0 gibi) olduğu
    varsayılır.
   </para>
  </note>
  <note>
   <para>
    <literal>alpha</literal> ve <literal>beta</literal> gibi özel sürüm
    dizgeleri harf büyüklüğüne duyarlıdır. PHP standardına uymayan
    gelişigüzel kaynaklardan gelen sürüm dizgelerinin
    <function>version_compare</function> çağrılmadan önce
    <function>strtolower</function> aracılığıyla küçük harfli yapılması
    gerekebilir.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>phpversion</function></member>
    <member><function>php_uname</function></member>
    <member><function>function_exists</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
