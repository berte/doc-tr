<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdo.quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::quote</refname>
  <refpurpose>Bir sorguda kullanılmak üzere bir dizgeyi önceler
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
<methodsynopsis role="PDO">
   <modifier>public</modifier>
   <type class="union"><type>string</type><type>false</type></type><methodname>PDO::quote</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>tür</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
  </methodsynopsis>

  <para>
   Girdi dizgesine gerekiyorsa ilgili veritabanı sürücüsüne uygun bir önceleme
   uygular.
  </para>
  <para>
   Bu işlevi SQL deyimlerini oluştururken kullanıyorsanız, kullanıcı girdisini
   bir SQL deyimi haline getirmek için <methodname>PDO::quote</methodname>
   yerine <methodname>PDO::prepare</methodname> ile bağımsız değişkenleri
   ilişkilendirilmiş SQL deyimleri hazırlamanızı hararetle öneririz.
   Bağımsız değişkenlerle ilişkilendirimiş hazır deyimler taşınabilir olmaktan başka
   daha kullanışlı ve SQL zerkine bağışık olmanın yanında sorgunun derlenmiş
   hali hem sunucuda hem de istemcide bulunduğundan yorumlanan sorgulardan çok
   daha hızlıdır.
  </para>
  <para>
   PDO sürücülerinin hepsi bu yöntemi gerçeklemez. (özellikle PDO_ODBC) Bu
   bakımdan hazır deyimleri kullanmaya hazır olmalısınız.
  </para>
  <caution>
   <title>Güvenlik: Öntanımlı karakter kümesi</title>
   <para>
    Karakter kümesi, <methodname>PDO::quote</methodname>'u etkilemesi için
    ya sunucu seviyesinde ya da (sürücüye bağlı olarak) veritabanı
    bağlantısının kendisinde ayarlanmalıdır. Daha fazla bilgi için <link
    linkend="pdo.drivers">sürücüye özel belgelere</link> bakılabilir.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
      <listitem>
       <para>
        Öncelenecek dizge.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>tür</parameter></term>
      <listitem>
       <para>
        İkincil bir önceleme tarzı olan sürücülere veri türü olarak bir ipucu
        sağlar. Örneğin, <constant>PDO_PARAM_LOB</constant> sabiti sürücüye
        ikil veriyi öncelemesini söyler.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bir SQL deyiminde aktarılmak üzere teorik olarak güvenli kabul edilen bir
   öncelenmiş dizge döndürür. Eğer sürücü bu tarz öncelemeyi desteklemiyorsa
   &false; döner.
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Normal bir dizgeyi öncelemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/*Basit dizge */
$string = 'Basit';
print "Öncelenmemiş dizge: $string\n";
print "Öncelenmiş dizge: " . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Öncelenmemiş dizge: Basit
Öncelenmiş dizge: 'Basit'
]]>
    </screen>
   </example>
   <example>
    <title>- Tehlikeli bir dizgeyi öncelemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* Tehlikeli dizge */
$string = 'Münasebetsiz \' dizge';
print "Öncelenmemiş dizge: $string\n";
print "Öncelenmiş dizge:" . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Öncelenmemiş dizge: Münasebetsiz ' dizge
Öncelenmiş dizge: 'Münasebetsiz '' dizge'
]]>
    </screen>
   </example>
   <example>
    <title>- Karmaşık bir dizgeyi öncelemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* Karmaşık dizge */
$string = "Co'mpl''ex \"st'\"ring";
print "Öncelenmemiş dizge: $string\n";
print "Öncelenmiş dizge:" . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Öncelenmemiş dizge: Co'mpl''ex "st'"ring
Öncelenmiş dizge: 'Co''mpl''''ex "st''"ring'
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
