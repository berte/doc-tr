<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: af4410a7e15898c3dbe83d6ea38246745ed9c6fb Maintainer: nilgun Status: ready -->
<chapter xml:id="yaz.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <para>
  PHP/YAZ hedeflerle bağlantıların izini kaydeder. Bu bağlantılar bir
  özkaynakla temsil edilirler.
 </para>
 <para>
  Aşağıdaki betikte, arayüzün paralel arama özelliği gösterilmiştir.
  Bağımsız değişkensiz çağrıldığında bir sorgu formu basar; bağımsız değişkenli çağrıldığında
  ise <literal>konut</literal> dizisinde belirtilen hedefleri araştırır.
 </para>
 <para>
  <example>
   <title>YAZ kullanarak paralel arama</title>
   <programlisting role="php">
<![CDATA[
<?php
$konut=$_REQUEST[konut];
$sorgu=$_REQUEST[sorgu];
$konut_sayısı = count($konut);
if (empty($sorgu) || count($konut) == 0) {
    echo '<form method="get">
    <input type="checkbox"
    name="konut[]" value="bagel.indexdata.dk/gils" />
        GILS test
    <input type="checkbox"
    name="konut[]" value="localhost:9999/Default" />
        local test
    <input type="checkbox" checked="checked"
    name="konut[]" value="z3950.loc.gov:7090/voyager" />
        Library of Congress
    <br />
    RPN sorgu:
    <input type="text" size="30" name="sorgu" />
    <input type="submit" name="action" value="Ara" />
    </form>
    ';
} else {
    echo 'Aranan hedef: ' . htmlspecialchars($sorgu) . '<br />';
    for ($i = 0; $i < $konut_sayısı; $i++) {
        $id[] = yaz_connect($konut[$i]);
        yaz_syntax($id[$i], "usmarc");
        yaz_range($id[$i], 1, 10);
        yaz_search($id[$i], "rpn", $sorgu);
    }
    yaz_wait();
    for ($i = 0; $i < $konut_sayısı; $i++) {
        echo '<hr />' . $konut[$i] . ':';
        $error = yaz_error($id[$i]);
        if (!empty($error)) {
            echo "Hata: $error";
        } else {
            $hits = yaz_hits($id[$i]);
            echo "Sonuç sayısı: $hits";
        }
        echo '<dl>';
        for ($p = 1; $p <= 10; $p++) {
            $rec = yaz_record($id[$i], $p, "string");
            if (empty($rec)) continue;
            echo "<dt><b>$p</b></dt><dd>";
            echo nl2br($rec);
            echo "</dd>";
        }
        echo '</dl>';
    }
}
?>
]]>
   </programlisting>
  </example>
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

