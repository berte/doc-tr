<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.imagettftext" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettftext</refname>
  <refpurpose>Metni görüntüye TrueType yazı tipi ile yazar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>imagettftext</methodname>
   <methodparam><type>GdImage</type><parameter>görüntü</parameter></methodparam>
   <methodparam><type>float</type><parameter>boyut</parameter></methodparam>
   <methodparam><type>float</type><parameter>açı</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>renk</parameter></methodparam>
   <methodparam><type>string</type><parameter>yazıtipi</parameter></methodparam>
   <methodparam><type>string</type><parameter>metin</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>seçenekler</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Belirtilen metni belirtilen TrueType yazı tipi ile belirtilen görüntüye yazar.
  </para>
  <note>
   <para>
    PHP 8.0.0 öncesinde <function>imagefttext</function> işlevi
    <function>imagettftext</function> işlevinin geliştirilmişi olup ek olarak
    <parameter>seçenekler</parameter> bağımsız değişkenine sahipti.
    PHP 8.0.0 ve sonrasında <function>imagettftext</function> işlevi
    <function>imagefttext</function> işlevinin takma adıdır.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>boyut</parameter></term>
     <listitem>
       <para>&gd.font.size;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>açı</parameter></term>
     <listitem>
      <para>
       Derece cinsinden açı. Soldan sağa yazılan bir metnin açısı 0 derecedir.
       Daha büyük değerler yelkovanın ters yönünde belirtilmiş varsayılır.
       Örneğin 90 derecelik bir metin aşağıdan yukarı doğru yazılır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       <parameter>x</parameter> ve <parameter>y</parameter> ile belirtilen
       koordinatlar ilk harfin taban noktasını (kabaca harfin sol alt köşesi)
       tanımlar. Bu tanımlama, koordinatların harfin sol üst köşesini
       tanımladığı <function>imagestring</function> işlevinden farklıdır.
       Resmin sol üst köşesinin koordinatları 0, 0'dır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       <parameter>x</parameter> bağımsız değişkenine bakınız.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>renk</parameter></term>
     <listitem>
      <para>
       Renk indisi. Negatif bir renk indisi kenar yumuşatmayı kapatır.
       <function>imagecolorallocate</function> işlevine bakınız.
      </para>
     </listitem>
    </varlistentry>
    &gd.ttf.fontfile;
    <varlistentry>
     <term><parameter>metin</parameter></term>
     <listitem>
      <para>
       UTF-8 kodlanmış metin dizgesi.
      </para>
      <para>
       Karakter numarası 127'den büyük karakterler için onluk karakter
       numarası (&amp;#8364; şeklinde) belirtilebilir. Onaltılık gösterim de
       (&amp;#xA9; şeklinde) desteklenmektedir.
       UTF-8 kodlu metinler doğrudan aktarılabilir.
      </para>
      <para>
       &amp;copy; gibi isimli öğeler desteklenmemektedir. Bu tür isimli
       öğeleri UTF-8 dizgelerde kullanmak için
       <function>html_entity_decode</function> işlevi ile dönüştürebilirsiniz.
      </para>
      <para>
       Eğer yazı tipi tarafından desteklenmeyen bir karakter belirtirseniz
       karakterin yerinde boş bir dikdörtgen görürsünüz.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Hata durumunda &false; yoksa metin çerçevesinin dört köşesinin
   koordinatlarını içeren 8 elemanlı bir dizi döner. Çerçevenin köşeleri dizide
   sırayla şunlardır: sol alt, sağ alt, sağ üst, sol üst. Noktalar açıdan
   bağımsız olarak metne görelidir. Yani, "sol üst" denince metne yatay olarak
   bakarkenki sol üst köşe kastedilmektedir.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>seçenekler</parameter> bağımsız değişkeni eklendi.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>imagettftext</function> örneği</title>
    <para>
     Bu örnek betik, içinde Arial yazı tipi ile siyah renkte (gri gölgeli)
     "Testing..." yazılmış 400x30 piksellik beyaz bir PNG görüntü üretecektir.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// İçerik türünü belirt
header('Content-Type: image/png');

// Görüntüyü boş olarak oluştur
$resim = imagecreatetruecolor(400, 30);

// Renkleri tanımla
$beyaz = imagecolorallocate($resim, 255, 255, 255);
$gri = imagecolorallocate($resim, 128, 128, 128);
$siyah = imagecolorallocate($resim, 0, 0, 0);
imagefilledrectangle($resim, 0, 0, 399, 29, $beyaz);

// Metni tanımla
$metin = 'Testing...';
// Buraya kendi dosya yolunuzu yaz
$font = 'arial.ttf';

// Metne gölge ver
imagettftext($resim, 20, 0, 11, 21, $gri, $font, $metin);

// Metni ekle
imagettftext($resim, 20, 0, 10, 20, $siyah, $font, $metin);

// imagejpeg()'ye göre daha temiz sonuç veren imagepng()'yi kullan
imagepng($resim);
imagedestroy($resim);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Örnek çıktısı: imagettftext()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagettftext.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.freetype;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagettfbbox</function></member>
   <member><function>imagefttext</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
