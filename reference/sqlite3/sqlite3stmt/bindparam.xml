<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 855bfee2f3db70d7dbb4c60c7c4a4efa567f1c60 Maintainer: nilgun Status: ready -->
<refentry xml:id="sqlite3stmt.bindparam" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3Stmt::bindParam</refname>
  <refpurpose>Bir PHP değişkenini bir SQL değişkeni ile ilişkilendirir
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SQLite3Stmt">
   <modifier>public</modifier> <type>bool</type><methodname>SQLite3Stmt::bindParam</methodname>
   <methodparam><type>string</type><parameter>sql_değişkeni</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter role="reference">php_değişkeni</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>tür</parameter><initializer><constant>SQLITE3_TEXT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>php_değişkeni</parameter> ile
   <parameter>sql_değişkeni</parameter>ni ilişkilendirir.
  </para>
  <caution>
   <para>
    PHP 7.2.14 ve 7.3.0 öncesinde, <parameter>sql_değişkeni</parameter>nin izleyen <methodname>SQLite3Stmt::execute</methodname> çağrıları ile uygun şekilde güncellenmesi gerekiyorsa ilk
    <methodname>SQLite3Stmt::execute</methodname> çağrısından sonra <methodname>SQLite3Stmt::reset</methodname> çağrılmalıdır. <methodname>SQLite3Stmt::reset</methodname> çağrılmazsa,
    <methodname>SQLite3Stmt::bindParam</methodname> yöntemine aktarılan
    <parameter>php_değişkeni</parameter>e atanan değer değişse veya
    <methodname>SQLite3Stmt::bindParam</methodname> yeniden çağrılsa bile
    <parameter>sql_değişkeni</parameter>nin değeri değişmeyecektir.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sql_değişkeni</parameter></term>
     <listitem>
      <para>
       <parameter>php_değişkeni</parameter>nin ilişkilendirileceği <parameter>sql_değişkeni</parameter>ni tanımlayan bir dizge
       (isimli bağımsız değişkenler için) veya tamsayı (konumsal bağımsız değişkenler için).
       İki nokta üst üste  (<literal>:</literal>) imi veya
       <literal>@</literal> imi ile öncelenmemiş bir isimli
       <parameter>sql_değişkeni</parameter>
       iki nokta üst üste imi ile otomatik olarak öncelenir.
       Konumsal değişkenler <literal>1</literal>'den başlar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>php_değişkeni</parameter></term>
     <listitem>
      <para>
       <parameter>sql_değişkeni</parameter>i ile ilişkilendirilecek
       değişken.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>tür</parameter></term>
     <listitem>
      <para>
       İlişkilendirilecek <parameter>php_değişkeni</parameter>nin veri türü
       <itemizedlist>
        <listitem>
         <para>
          <constant>SQLITE3_INTEGER</constant>: İşaretli tamsayı. Değerin
          büyüklüğüne göre 1, 2, 3, 4, 6 veya 8 bayt genişlikte olabilir.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_FLOAT</constant>: Gerçek sayı. Bir 8 baytlık IEEE
          kayan noktalı sayı olarak saklanır.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_TEXT</constant>: Bir dizge. Veritabanının karakter
          kodlamasıyla kodlanır (UTF-8, UTF-16BE veya UTF-16-LE).
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_BLOB</constant>: İkil veri. Veri girildiği haliyle
          saklanır.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_NULL</constant>: &null; değer.
         </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       PHP 7.0.7 itibariyle, <parameter>tür</parameter> atlanmışsa,
       <parameter>php_değişkeni</parameter>: <type>bool</type> türünden
       otomatik olarak saptanır.
       <type>int</type> türü <constant>SQLITE3_INTEGER</constant> olarak,
       <type>float</type> türü <constant>SQLITE3_FLOAT</constant> olarak,
       <type>null</type> türü <constant>SQLITE3_NULL</constant> ve
       tüm diğerleri<constant>SQLITE3_TEXT</constant> olarak ele alınır.
       Evvelce, <parameter>tür</parameter> atlanmışsa,
       <constant>SQLITE3_TEXT</constant> öntanımlıydı.
      </para>
      <note>
       <para>
        <parameter>php_değişkeni</parameter> için &null; belirtilmişse,
        belirtilen <parameter>tür</parameter>e bakılmaksızın daima
        <constant>SQLITE3_NULL</constant> olarak ele alınır.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>php_değişkeni</parameter> ile
   <parameter>sql_değişkeni</parameter> ilişkilendirilebilmişse &true;
   yoksa &false;  döner.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.4.0</entry>
      <entry>
       <parameter>sql_değişkeni</parameter> için artık
       <literal>@sql_değişkeni</literal> gösterimi de destekleniyor.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>SQLite3Stmt::bindParam</function> kullanımı</title>
    <para>
     Bu örnekte, tek bir bağımsız değişken ile ilişkilendirilmiş tek bir hazırlanmış
     deyimin farklı değerlere sahip çok sayıda satırı yerleştirmek için nasıl
     kulllanılacağı gösterilmiştir.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$db = new SQLite3(':memory:');
$db->exec("CREATE TABLE foo (bar TEXT)");

$stmt = $db->prepare("INSERT INTO foo VALUES (:bar)");
$stmt->bindParam(':bar', $bar, SQLITE3_TEXT);

$bar = 'baz';
$stmt->execute();

$bar = 42;
$stmt->execute();

$res = $db->query("SELECT * FROM foo");
while (($row = $res->fetchArray(SQLITE3_ASSOC))) {
    var_dump($row);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(1) {
  ["bar"]=>
  string(3) "baz"
}
array(1) {
  ["bar"]=>
  string(2) "42"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SQLite3Stmt::bindValue</methodname></member>
   <member><methodname>SQLite3::prepare</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
