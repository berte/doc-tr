<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a5346daf2bb2fab250fa03f0f6639a408d0b2240 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.parse-ini-file">
 <refnamediv>
  <refname>parse_ini_file</refname>
  <refpurpose>Bir yapılandırma dosyasını çözümler</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>parse_ini_file</methodname>
   <methodparam><type>string</type><parameter>dosyaismi</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>bölümleri_işle</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>tarama_kipi</parameter><initializer><constant>INI_SCANNER_NORMAL</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_file</function> işlevi <parameter>dosyaismi</parameter>
   ile belirtilen yapılandırma dosyasını yükler ve içindeki ayarları bir
   ilişkisel dizi içinde döndürür.
  </para>
  <para>
   Belirtilen dosyanın yapısı &php.ini; dosyasının yapısıyla aynı olmalıdır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dosyaismi</parameter></term>
     <listitem>
      <para>
       Çözümlenecek yapılandırma dosyasının ismi. Göreli bir yol
       kullanılıyorsa, mevcut çalışma dizinine göre, ardından
       <link linkend="ini.include-path">include_path</link> değerlendirilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bölümleri_işle</parameter></term>
     <listitem>
      <para>
       Bu bağımsız değişkene &true; atanırsa bölüm isimlerini ve içerdikleri
       ayarları içeren çok boyutlu bir dizi döner. Bağımsız değişkenin öntanımlı
       değeri &false;'tır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>tarama_kipi</parameter></term>
     <listitem>
      <para>
       Değeri <constant>INI_SCANNER_NORMAL</constant> (öntanımlıdır) veya
       <constant>INI_SCANNER_RAW</constant> olabilir. Eğer
       <constant>INI_SCANNER_RAW</constant> belirtilirse seçenek değerleri
       çözümlenmez.
      </para>
      &ini.scanner.typed;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Başarısızlık durumunda &false; aksi takdirde ayarları bir ilişkisel dizi
   içinde döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <filename>misal.ini</filename> içeriği</title>
    <programlisting>
<![CDATA[
; Bu bir yapılandırma dosyası örneğidir.
; php.ini içinde ';' ile başlayan satırlar açıklamadır.

[ilk_bölüm]
bir = 1
yedi = 7
hayvan = AT

[ikinci_bölüm]
yol = "/usr/local/bin"
URL = "http://localhost/~kullanici"

[üçüncü_bölüm]
phpversion[] = "5.0"
phpversion[] = "5.1"
phpversion[] = "5.2"
phpversion[] = "5.3"

urls[svn] = "http://svn.php.net"
urls[git] = "http://git.php.net"
]]>
    </programlisting>
   </example>
   <example>
    <title>- <function>parse_ini_file</function> örneği</title>
    <para>
     INI dosyası içinde <link linkend="language.constants">sabitler</link> de
     (fakat <constant>__FILE__</constant> gibi sihirli sabitler değil) çözümlenebilir, bu bakımdan <function>parse_ini_file</function> işlevini
     çalıştırmadan önce bir sabiti bir ini değeri olarak tanımlamışsanız, bu
     sabit de sonuca dahil edilir. Sadece ini değerleri değerlendirmeye
     alınır ve değer bir sabit olmalıdır. Örnek:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

define('AT', 'Doru at');

// Bölümleri çözümlemeyelim
$ini_dizisi = parse_ini_file("misal.ini");
print_r($ini_dizisi);

// Bölümleri de çözümleyelim
$ini_dizisi = parse_ini_file("misal.ini", true);
print_r($ini_dizisi);

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [bir] => 1
    [yedi] => 7
    [hayvan] => Doru at
    [yol] => /usr/local/bin
    [URL] => http://localhost/~kullanici
    [phpversion] => Array
        (
            [0] => 5.0
            [1] => 5.1
            [2] => 5.2
            [3] => 5.3
        )

    [urls] => Array
        (
            [svn] => http://svn.php.net
            [git] => http://git.php.net
        )

)
Array
(
    [ilk_bölüm] => Array
        (
            [bir] => 1
            [yedi] => 7
            [hayvan] => Doru at
        )

    [ikinci_bölüm] => Array
        (
            [yol] => /usr/local/bin
            [URL] => http://localhost/~kullanici
        )

    [üçüncü_bölüm] => Array
        (
            [phpversion] => Array
                (
                    [0] => 5.0
                    [1] => 5.1
                    [2] => 5.2
                    [3] => 5.3
                )

            [urls] => Array
                (
                    [svn] => http://svn.php.net
                    [git] => http://git.php.net
                )

        )

)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- Bir php.ini dosyasının <function>parse_ini_file</function> ile
    çözümlenmesi</title>
    <programlisting role="php">
<![CDATA[
<?php
// Aşağıdaki sonuçları karşılaştırmak için basit bir işlev
function evethayır($ifade)
{
 return($ifade ? 'Evet' : 'Hayır');
}

// php_ini_loaded_file() ile php.ini dosyasının yolunu öğrenelim.
$ini_yolu = php_ini_loaded_file();

// php.ini dosyasını çözümleyelim
$ini = parse_ini_file($ini_yolu);

// Değerleri karşılaştırıp basalım; get_cfg_var() ile de aynı
// sonuçların alınacağına dikkat ediniz
echo '(çözümlenen) magic_quotes_gpc =' .
    evethayır($ini['magic_quotes_gpc']) . PHP_EOL;
echo '(yüklenen) magic_quotes_gpc = ' .
    evethayır(get_cfg_var('magic_quotes_gpc')) . PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
(çözümlenen) magic_quotes_gpc = Evet
(yüklenen) magic_quotes_gpc = Evet
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Ara Değerler</title>
    <para>
     Sabitleri değerlendirmeye ek olarak, belirli karakterlerin ini
     değerlerinde özel anlamları vardır. Buna ek olarak, ortam değişkenleri ve
     önceden tanımlanmış yapılandırma seçenekleri <code>${}</code>sözdizimi
     kullanılarak okunabilir (bkz: <function>get_cfg_var</function>).
    </para>
    <programlisting>
<![CDATA[
; bitsel VEYA için | kullanılır
three = 2|3

; bitsel VE için & kullanılır
four = 6&5

; bitsel Ayrıcalıklı VEYA için ^ kullanılır
five = 3^6

; bitsel olumsuzlama için ~ kullanılır
negative_two = ~1

; gruplama için () kullanılır
seven = (8|7)&(6|5)

; PATH ortam değişkenini oku
path = ${PATH}

; 'memory_limit' yapılandırma seçeneğini oku
configured_memory_limit = ${memory_limit}

]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Öncelleme Karakterleri</title>
    <para>
     Bazı karakterlerin çift tırnaklı dizgelerde özel anlamları olduğundan
     önlerine tersbölü çizgisi konarak öncelenmeleri gerekir. Hepsinden önce,
     dizgenin sınırlarını belirleyen  çift tırnak <code>"</code> ve
     tersbölünün <code>\</code> kendisi (özel karakterlerden birini
     önceliyorsa) bu özel karakterlerdendir:
    </para>
    <programlisting>
<![CDATA[
tırnaklı = "She said \"Exactly my point\"."
; İçinde tırnak imleri bulunan; bir dize elde edilir.

ipucu = "Çift tırnağı öncelemek için \\\" kullan"
; Sonuç: Çift tırnağı öncelemek için \" kullan
]]>
    </programlisting>
    <para>
     Windows benzeri dosya yollarında bunun bir istisnası vardır:
     Tırnaklı dizgeyi bir satırsonu izliyorsa sondaki ters bölüyü
     öncelememek mümkündür:
    </para>
    <programlisting>
<![CDATA[
save_path = "C:\Temp\"
]]>
    </programlisting>
    <para>
     Çok satırlı bir değerde ardından satır sonu gelen bir çift tırnağın
     öncelenmesi gerekiyorsa, değer birleştirmeyi aşağıdaki şekilde kullanmak
     mümkündür (bir çift tırnaklı dizenin hemen ardından bir diğeri gelir):
    </para>
    <programlisting>
<![CDATA[
long_text = "Lorem \"ipsum\"""
 dolor" ; Sonuç: Lorem "ipsum"\n dolor
]]>
    </programlisting>
    <para>
     Özel anlamı olan karakterlerden bir diğeri <code>$</code> dolar imidir.
     Ardından açan kaşlı ayraç geliyorsa dolar iminin öncelenmesi gerekir:
    </para>
    <programlisting>
<![CDATA[
code = "\${test}"
]]>
    </programlisting>
    <para>
     Karakter önceleme <constant>INI_SCANNER_RAW</constant> kipinde
     desteklenmez (bu kipte tüm karakterler "oldukları gibi" işlenir).
    </para>
    <para>
     İni çözümleyicisinin standart öncelemleri (<code>\n</code>,
     <code>\t</code> ve benzerlerini) desteklemediğini dikkate almak gerekir.
     Gerekirse, <function>parse_ini_file</function> işlevinin sonucunu
     <function>stripcslashes</function> işleviyle yeniden işlemden geçirmek
     gerekebilir.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Bu işlev &php.ini; dosyasına hiçbir şey yapmaz. Zaten betiğinizi
    çalıştırdığınız sırada işlem yapılır. Bu işlevi sadece kendi uygulamanızın
    yapılandırma dosyasını okumak için kullanabilirsiniz.
   </para>
  </note>
  <note>
   <para>
    INI dosyasındaki bir değer harf ve rakamların haricinde karakterler
    içeriyorsa bu değeri çift tırnak (") imlerinin arasına almalısınız.
   </para>
  </note>
  <note>
   <simpara>
    INI dosyalarında anahtar olarak kullanılmaması gereken bazı özel sözcükler
    vardır. Bunlar: <literal>null</literal>, <literal>yes</literal>,
    <literal>no</literal>, <literal>true</literal>, <literal>false</literal>,
    <literal>on</literal>, <literal>off</literal>, <literal>none</literal>.
    <constant>INI_SCANNER_TYPED</constant> kipi kullanılmadıkça
    <literal>null</literal>, <literal>off</literal>, <literal>no</literal> ve
    <literal>false</literal> sözcükleri <literal>""</literal> ile
    sonuçlanırken, <literal>on</literal>, <literal>yes</literal> ve
    <literal>true</literal> sözcükleri <literal>"1"</literal> ile sonuçlanır.
    <literal>?{}|&amp;~![()^"</literal> karakterleri hiçbir yerde anahtar veya
    değer içinde kullanılmamalıdır.
   </simpara>
  </note>
  <note>
   <para>
    Eşit işareti içermeyen girdiler yoksayılır. Örneğin, "foo" yoksayılırken
    "bar =" çözümlenir ve boş değer eklenir. Örneğin, MySQL
    <filename>my.cnf</filename> içinde bir "no-auto-rehash" girdisine sahiptir
    ve herhangi bir değer almadığı için yoksayılır.
   </para>
  </note>
  <note>
   <para>
    ini dosyaları genellikle HTTP sunucuları tarafından düz metin olarak kabul
    edilir ve bu nedenle istenirse tarayıcılara sunulur. Bu, güvenlik için ini
    dosyalarınızı belge kök dizininiz dışında tutmanız veya HTTP sunucunuzu
    onlara hizmet vermeyecek şekilde yeniden yapılandırmanız gerektiği
    anlamına gelir. Bunlardan herhangi birinin yapılmaması bir güvenlik riski
    oluşturabilir.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_ini_string</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
