<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 161dde4fe721309398dd324edbf02aec409f127b Maintainer: nilgun Status: ready -->
<sect1 xml:id="language.types.boolean">
 <title><code>bool</code></title>

 <simpara>
  Yalnızca iki değer <type>bool</type> türünde olabilir ve bunlar
  &true; ve &false; (doğru ve yanlış) olup doğruluk değerleri adını alır.
 </simpara>

 <sect2 xml:id="language.types.boolean.syntax">
  <title>Sözdizimi</title>
  <para>
   Bir <type>bool</type> sayılını belirtmek için &true; veya
   &false; sabiti kullanılır. Her ikisi de harf büyüklüğüne
   duyarsızdır.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$foo = True; // $foo değişkenine TRUE değeri atanır.
?>
]]>
   </programlisting>
  </informalexample>

  <para>
    Genelde, <type>bool</type> türünde bir değer döndüren bir
    <link linkend="language.operators">işleç</link> ifadesinin sonucu bir
    <link linkend="language.control-structures">denetim yapısı</link>na
    aktarılır.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// == işleci, eşitliği sınar ve
// bool türünde bir değer döndürür
if ($eylem == "sürümü göster") {
    echo "Sürüm numarası 1.23'tür.";
}

// Bu gereksizdir çünkü aynı manada kullanılır
if ($ayırıcı_göster == TRUE) {
    echo "<hr>\n";
}

// ... böylesi daha iyidir:
if ($ayırıcı_göster) {
    echo "<hr>\n";
}
?>
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="language.types.boolean.casting">
  <title><code>bool</code> türüne dönüşüm</title>

  <simpara>
   Bir değeri doğrudan <type>bool</type> türüne dönüştürmek için
   <literal>(bool)</literal> çarpıtması kullanılabilir. Genelde bu
   gereksizdir, çünkü mantıksal bir bağlamda kullanılan bir değer otomatik
   olarak <type>bool</type> türünde bir değer olarak yorumlanır. Daha
   ayrıntılı bilgi için <link linkend="language.types.type-juggling">Tür
    Dönüşümü </link> sayfasına bakılabilir.
  </simpara>

  <simpara>
   Ayrıca, <link linkend="language.types.type-juggling">Tür Dönüşümü</link>
   bölümüne de bakınız.
  </simpara>

  <para>
   Aşağıdaki değerler <type>bool</type> türüne dönüşümde &false; olarak
   ele alınırlar:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="language.types.boolean">mantıksal</link> &false; (kendisi)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.integer">tamsayı</link> <literal>0</literal> (sıfır)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.float">gerçel</link> <literal>0.0</literal> ve <literal>-0.0</literal> (sıfır)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     boş <link linkend="language.types.string">dizge</link> <literal>""</literal> ve
     <link linkend="language.types.string">dizge</link>sel <literal>"0"</literal>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     hiç elemanı olmayan <link linkend="language.types.array">dizi</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     tür olarak <link linkend="language.types.null">NULL</link> (tanımsız
     değişkenler dahil)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <type>bool</type> türüne dönüşmek için <literal>(bool)</literal>
     çarpıtmasını aşırı yükleyen dahili nesneler. Örneğin, <link
     linkend="ref.simplexml">SimpleXML</link> nesneleri özniteliksiz boş
     elemanlardan oluşturulur.
    </simpara>
   </listitem>
  </itemizedlist>

  <para>
   Bunların dışında kalan tüm değerler &true; olarak ele alınır
   (<link linkend="language.types.resource">resource</link> türler ve
   <constant>NAN</constant> dahil).
  </para>

  <warning>
   <simpara>
    <literal>-1</literal> ve sıfırdan farklı diğer değerler (pozitif veya
    negatif) &true; olarak ele alınır.
   </simpara>
  </warning>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump((bool) "");        // bool(false)
var_dump((bool) "0");       // bool(false)
var_dump((bool) 1);         // bool(true)
var_dump((bool) -2);        // bool(true)
var_dump((bool) "foo");     // bool(true)
var_dump((bool) 2.3e5);     // bool(true)
var_dump((bool) array(12)); // bool(true)
var_dump((bool) array());   // bool(false)
var_dump((bool) "false");   // bool(true)
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
