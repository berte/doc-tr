<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2bcb7a986d47e06c1a37474a8b3634367c907043 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.addcslashes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>addcslashes</refname>
  <refpurpose>Dizgeye C tarzı öncelem uygular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>addcslashes</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam><type>string</type><parameter>karakterler</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>dizge</parameter> dizgesindeki
   <parameter>karakterler</parameter> bağımsız değişkeninde listelenmiş
   karakterlerin önüne tersbölü yerleştirilerek elde edilen dizgeyi döndürür.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Öncelenecek dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>karakterler</parameter></term>
     <listitem>
      <para>
       Önlerine tersbölü konulacak <literal>\n</literal>,
       <literal>\r</literal> gibi karakterleri içeren dizge. Belirtilen
       karakterler C tarzı öncelenirken, ASCII kodu 32'den küçük ve 126'dan
       büyük karakterler sekizlik gösterimlerine dönüştürülür.
      </para>
      <para>
       Burada karakter aralığı belirtiyorsanız aralığın hangi
       karakterleri içerdiğine dikkat etmelisiniz.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes('foo[ ]', 'A..z');
// çıktısı:  \f\o\o\[ \]
// Tüm büyük ve küçük harflerden başka [\]^_` karakterleri de öncelenir
?>
]]>
        </programlisting>
       </informalexample>
       Ayrıca, bir aralığın başlangıç karakterinin ASCII değeri, son
       karakterininkinden büyükse ilk ve son karakter hariç bu aralıktaki
       hiçbir karakter öncelenmez. Bir karakterin ASCII değerini
       bulmak için <function>ord</function> işlevini kullanın.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes("zoo['.']", 'z..A');
// çıktısı:  \zoo['\.']
?>
]]>
        </programlisting>
       </informalexample>
      </para>
      <para>
       Karakterleri seçerken dikkatli olun: 0, a, b, f, n, r,
       t ve v karakterleri \0, \a, \b, \f, \n, \r, \t ve \v karakterlerine
       dönüştürülecektir. Bunların hepsi C tarzı öncelemde öntanımlı
       dizilimler olup PHP'de  \0 (NULL), \r (satırbaşı), \n (satırsonu), \f
       (sayfa ileri), \v (düşey sekme) ve \t (yatay sekme) öntanımlı
       dizilimlerdir. Bu dizilimler ayrıca, PHP dahil C'den türetilmiş dillerde
       de tanımlıdır. Yani, <parameter>karakterler</parameter>'de tanımlanan bu
       karakterlerle bu dillerde kod üretmek için
       <function>addcslashes</function> çıktısını  kullanmak istenen sonucu
       vermeyebilir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Öncelenmiş dizge.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    "\0..\37" gibi bir aralık ASCII kodu 0 ile 31 arasında kalan karakterlerin
    de öncelenmesini sağlayacaktır.
   <example>
    <title>- <function>addcslashes</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$öncelemli = addcslashes($öncelemsiz, "\0..\37!@\177..\377");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripcslashes</function></member>
    <member><function>stripslashes</function></member>
    <member><function>addslashes</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
