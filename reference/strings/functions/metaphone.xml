<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.metaphone">
 <refnamediv>
  <refname>metaphone</refname>
  <refpurpose>Bir dizgenin metafon anahtarını hesaplar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>metaphone</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>azami_ses_karakteri_sayısı</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>dizge</parameter> dizgesinin metafon anahtarını hesaplar.
  </para>
  <para>
   Benzer sesletime sahip sözcükler için aynı anahtarı üretmesi bakımından
   <function>soundex</function> işlevine benzer. Ancak İngilizce okunuşun temel
   kuralları kullanıldığından <function>soundex</function> işlevine göre daha
   doğru anahtarlar üretir. Ayrıca bu işlevin ürettiği anahtarlar değişken
   uzunluktadır.
  </para>
  <para>
   Metafon Lawrence Philips &lt;lphilips at verity dot com&gt; tarafından
   geliştirilmiş ve şu kitapta açıklanmıştır: ["Practical Algorithms for
   Programmers", Binstock &amp; Rex, Addison Wesley, 1995]
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Girdi dizgesi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>azami_ses_karakteri_sayısı</parameter></term>
     <listitem>
      <para>
       Bu bağımsız değişken, döndürülen metafon anahtarını uzunluk olarak
       azami_ses_karakteri_sayısı karakterle sınırlar. Bununla birlikte, ortaya
       çıkan ses karakterleri her zaman tamamen kopyalanır, bu nedenle ortaya
       çıkan dizi uzunluğu azami_ses_karakteri_sayısından biraz daha uzun
       olabilir. Öntanımlı değer olan 0, kısıtlama olmadığı anlamına gelir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Metafonu bir dizge olarak döndürür,&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Başarısızlık durumunda işlev artık &false; döndürüyor.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="metaphone.example.basic"><!-- {{{ -->
    <title>- <function>metaphone</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(metaphone('programming'));
var_dump(metaphone('programmer'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(7) "PRKRMNK"
string(6) "PRKRMR"
]]>
    </screen>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="metaphone.example.phonemes"><!-- {{{ -->
    <title>- <parameter>azami_ses_karakteri_sayısı</parameter> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(metaphone('programming', 5));
var_dump(metaphone('programmer', 5));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(5) "PRKRM"
string(5) "PRKRM"
]]>
    </screen>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="metaphone.example.phonemes-overlong">
    <title>- <parameter>azami_ses_karakteri_sayısı</parameter> kullanımı örneği</title>
    <simpara>
     Bu örnekte, <function>metaphone</function>'a beş karakterlik bir dizge
     üretmesi öneriliyor, ancak bu, son ses karakterinin içerilmemesi demektir,
     çünkü <literal>'x'</literal>, <literal>'KS'</literal> olarak yazılmalıdır,
     bu nedenle işlev, altı karakterli bir dizge döndürür.
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(metaphone('Asterix', 5));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(6) "ASTRKS"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
